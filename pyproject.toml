[tool.poetry]
name = "курсовая"
version = "0.1.0"
description = ""
authors = ["admin <dimap5825@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
pandas = "^2.3.3"
requests = "^2.32.5"
openpyxl = "^3.1.5"
python-dotenv = "^1.1.1"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
mypy = "^1.18.2"
types-requests = "^2.32.4.20250913"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["src", "tests"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", "*.egg-info"]
per-file-ignores = ["__init__.py:F401"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true
exclude = [".venv", "build", "dist"]

[[tool.mypy.overrides]]
module = ["develop_fun.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short"]

[tool.coverage.run]
source = ["src", "reports", "main"]
omit = ["*/__pycache__/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]